<?xml version="1.0"?>
<launch>
	<!--node pkg="cv_camera" type="cv_camera_node" name="cv_camera" output="screen">
		<param name="rate" type="int" value="10"/>  
	</node-->

	<node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.042 0.0 0.2 1.5707963 0.0 0.0 /base_link /laser_link 40" />

	<node name="ydlidar_lidar_publisher"  pkg="ydlidar_ros_driver"  type="ydlidar_ros_driver_node" output="screen" respawn="false" >
		<!-- string property -->
		<param name="port"         type="string" value="/dev/ydlidar"/>  
		<param name="frame_id"     type="string" value="laser_link"/>
		<param name="ignore_array"     type="string" value=""/>
		<!-- int property -->
		<param name="baudrate"         type="int" value="128000"/>  
		<!-- 0:TYPE_TOF, 1:TYPE_TRIANGLE, 2:TYPE_TOF_NET -->
		<param name="lidar_type"       type="int" value="1"/>  
		<!-- 0:YDLIDAR_TYPE_SERIAL, 1:YDLIDAR_TYPE_TCP -->
		<param name="device_type"         type="int" value="0"/>  
		<param name="sample_rate"         type="int" value="7"/>  
		<param name="abnormal_check_count"         type="int" value="4"/>  

		<!-- bool property -->
		<param name="resolution_fixed"    type="bool"   value="true"/>
		<param name="auto_reconnect"    type="bool"   value="true"/>
		<param name="reversion"    type="bool"   value="false"/>
		<param name="inverted"    type="bool"   value="true"/>
		<param name="isSingleChannel"    type="bool"   value="false"/>
		<param name="intensity"    type="bool"   value="false"/>
		<param name="support_motor_dtr"    type="bool"   value="true"/>
		<param name="invalid_range_is_inf"    type="bool"   value="false"/>
		<param name="point_cloud_preservative"    type="bool"   value="false"/>

		<!-- float property -->
		<param name="angle_min"    type="double" value="-180" />
		<param name="angle_max"    type="double" value="180" />
		<param name="range_min"    type="double" value="0.1" />
		<param name="range_max"    type="double" value="8.0" />
		<!-- frequency is invalid, External PWM control speed -->
		<param name="frequency"    type="double" value="10.0"/>
	</node>

	<!-- communication with the motor controller -->
	<node pkg="rosserial_python" type="serial_node.py" name="serial_node">
		<param name="port" value="/dev/ttyACM0"/>
		<param name="baud" value="115200"/>
	</node>

	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
		<!-- Frame names -->
		<!--remap from="scanmatch_odom" to="odometry"/-->
		<param name="map_frame" value="map" />
		<param name="base_frame" value="base_link" />
		<param name="odom_frame" value="base_link" />
		<param name="tf_map_scanmatch_transform_frame_name" value="odom" />

		<!-- Tf use -->
		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="pub_map_odom_transform" value="true"/>
		<param name="pub_odometry" value="true" />

		<!-- Map size / start point -->
		<param name="map_resolution" value="0.05"/>
		<param name="map_size" value="1024"/>
		<param name="map_start_x" value="0.5"/>
		<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="3" />

		<!-- Map update parameters -->
		<param name="update_factor_free" value="0.2"/>
		<param name="update_factor_occupied" value="0.9" />
		<param name="map_update_distance_thresh" value="0.3"/>
		<param name="map_update_angle_thresh" value="0.6" />
		<param name="laser_z_min_value" value = "-1.0" />
		<param name="laser_z_max_value" value = "1.0" />
		<param name="map_pub_period " value = "1.0" />
		<param name="laser_min_dist  " value = "0.5" />
		<param name="laser_max_dist  " value = "12.0" />

		<!-- Advertising config -->
		<param name="advertise_map_service" value="true"/>
		<param name="scan_subscriber_queue_size" value="1"/>
		<param name="scan_topic" value="scan"/>
	</node>
	  

	<!--include file="$(find hector_geotiff_launch)/launch/geotiff_mapper.launch">
		<arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
		<arg name="map_file_path" value="$(arg map_file)"/>
	</include-->  

	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<rosparam file="$(find maia_powerchair)/params/costmap_common_params.yaml" command="load" ns="global_costmap"/>
		<rosparam file="$(find maia_powerchair)/params/costmap_common_params.yaml" command="load" ns="local_costmap"/>
		<rosparam file="$(find maia_powerchair)/params/costmap_params.yaml" command="load"/> 
		<rosparam file="$(find maia_powerchair)/params/planners_params.yaml" command="load"/>
	</node>
</launch>

