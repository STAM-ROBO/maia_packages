<?xml version="1.0"?>
<launch>
	<!--node pkg="spacenav_node" type="spacenav_node" name="spacenav_node"/-->

	
	<group ns="od_ns">
		<include file="$(find realsense2_camera)/launch/rs_camera.launch">
			<arg name="align_depth" value="true"/>
			<arg name="color_width" value="640"/>
			<arg name="depth_width" value="640"/>
			<arg name="color_height" value="480"/>
			<arg name="depth_height" value="480"/>
			<arg name="color_fps" value="30"/>
			<arg name="depth_fps" value="30"/>
			<arg name="output" value="log"/>
		</include>
	</group>

	<node name="detector" pkg="object_detector" type="show_feed.py" output="log">
		<param name="debug" type="bool" value="false"/>
	</node>

	<remap from="/aruco_camera/image_raw" to="/camera"/>
																						<!-- euler rZ rY rX-->
	<node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 1.5 1.57 3.14 0.349 /base_link /aruco_camera 20" />

	<node pkg="usb_cam" type="usb_cam_node" name="aruco_camera" output="screen">
		<param name="camera_frame_id" type="string" value="aruco_camera"/>  
		<param name="framerate" type="int" value="30"/>  
		<param name="image_width" type="int" value="640"/>  
		<param name="image_height" type="int" value="480"/>  
		<param name="video_device" type="string" value="/dev/video6"/>  
		<param name="pixel_format" type="string" value="yuyv"/> 
		<param name="camera_info_url" type="string" value="file://$(find maia_powerchair)/params/camera.yaml"/>  	
	</node>
	
	<node pkg="aruco_detect" type="aruco_detect" name="aruco_detector">
		<param name="publish_images" type="bool" value="true"/>  
		<param name="dictionary" type="int" value="7"/>  
		<param name="fiducial_len" type="double" value="0.05"/>  		
	</node>

	<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" output="screen">
		<rosparam command="load" file="$(find maia_powerchair)/params/laser_filter_params.yaml" />
	</node>

	<node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0.67 0.35 0.0 0 0.0 0.0 /base_link /laser_link 20" />

	<node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
		<param name="serial_port"         type="string" value="/dev/usb_lidar"/>
		<param name="serial_baudrate"     type="int"    value="115200"/>
		<param name="frame_id"            type="string" value="laser_link"/>
		<param name="inverted"            type="bool"   value="false"/>
		<param name="angle_compensate"    type="bool"   value="true"/>
	</node>

	<!-- communication with the motor controller -->
	<node pkg="rosserial_python" type="serial_node.py" name="motor_bridge_node" output="screen">
		<param name="port" value="/dev/usb_motors"/>
		<param name="baud" value="115200"/>
	</node>
	
	<node pkg="perturbator" type="perturbator" name="perturbator" output="screen"/>

	<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
		<!-- Frame names -->
		<!--remap from="scanmatch_odom" to="odometry"/-->
		<param name="map_frame" value="map" />
		<param name="base_frame" value="base_link" />
		<param name="odom_frame" value="base_link" />
		<param name="tf_map_scanmatch_transform_frame_name" value="odom" />

		<!-- Tf use -->
		<param name="use_tf_scan_transformation" value="true"/>
		<param name="use_tf_pose_start_estimate" value="false"/>
		<param name="pub_map_odom_transform" value="true"/>
		<param name="pub_odometry" value="true" />

		<!-- Map size / start point -->
		<param name="map_resolution" value="0.03"/>
		<param name="map_size" value="1024"/>
		<param name="map_start_x" value="0.5"/>
		<param name="map_start_y" value="0.5" />
		<param name="map_multi_res_levels" value="3" />

		<!-- Map update parameters -->
		<param name="update_factor_free" value="0.2"/>
		<param name="update_factor_occupied" value="0.9" />
		<param name="map_update_distance_thresh" value="0.1"/>
		<param name="map_update_angle_thresh" value="0.9" />
		<param name="laser_z_min_value" value = "-1.0" />
		<param name="laser_z_max_value" value = "1.0" />
		<param name="map_pub_period " value = "0.5" />
		<param name="laser_min_dist  " value = "1.5" />
		<param name="laser_max_dist  " value = "10.0" />

		<!-- Advertising config -->
		<param name="advertise_map_service" value="true"/>
		<param name="scan_subscriber_queue_size" value="10"/>
		<param name="scan_topic" value="scan_filtered"/>
	</node>
	

	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log">
		<rosparam file="$(find maia_powerchair)/params/costmap_common_params.yaml" command="load" ns="global_costmap"/>
		<rosparam file="$(find maia_powerchair)/params/costmap_common_params.yaml" command="load" ns="local_costmap"/>
		<rosparam file="$(find maia_powerchair)/params/costmap_params.yaml" command="load"/> 
		<rosparam file="$(find maia_powerchair)/params/planners_params.yaml" command="load"/>
	</node>
</launch>

